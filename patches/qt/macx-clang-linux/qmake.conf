#
# qmake configuration for macx-linux-clang
#
# clang on Linux builder for OSX host
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/macx.conf)
include(../common/gcc-base-mac.conf)
include(../common/clang.conf)
include(../common/clang-mac.conf)

CUSTOM_HOST=
CUSTOM_BINUTILS_PATH=
CUSTOM_SDK_PATH=
CUSTOM_MIN_DEPLOYMENT_TARGET=
CUSTOM_CFLAGS=
CUSTOM_CXXFLAGS=
CUSTOM_OBJCFLAGS=
CUSTOM_TARGET=

QMAKE_XCODE_VERSION=4.3
QMAKE_XCODE_DEVELOPER_PATH=/Developer

QMAKE_MACOSX_DEPLOYMENT_TARGET = $${CUSTOM_MIN_DEPLOYMENT_TARGET}

QMAKE_MAC_SDK=macosx
QMAKE_MAC_SDK.macosx.path = $${CUSTOM_SDK_PATH}
QMAKE_MAC_SDK.macosx.platform_name = macosx
QMAKE_MAC_SDK_PATH=$${CUSTOM_SDK_PATH}

QMAKE_CFLAGS += $${CUSTOM_CFLAGS} $${CUSTOM_TARGET}
QMAKE_OBJECTIVE_CFLAGS += $${CUSTOM_OBJCFLAGS} $${CUSTOM_TARGET}
QMAKE_CXXFLAGS += $${CUSTOM_CXXFLAGS} $${CUSTOM_TARGET}
QMAKE_LFLAGS += $${CUSTOM_TARGET} $${CUSTOM_BINUTILS_PATH}
QMAKE_AR = $${CUSTOM_HOST}-ar cq
QMAKE_RANLIB=$${CUSTOM_HOST}-ranlib
QMAKE_LIBTOOL=$${CUSTOM_HOST}-libtool
QMAKE_INSTALL_NAME_TOOL=$${CUSTOM_HOST}-install_name_tool

load(qt_config)
